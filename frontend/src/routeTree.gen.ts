/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as HelpIndexImport } from './routes/help/index'
import { Route as RegServiceHallImport } from './routes/reg/service-hall'
import { Route as RegReadySubmitImport } from './routes/reg/ready-submit'
import { Route as RegNoticeImport } from './routes/reg/notice'
import { Route as RegContactDetailsImport } from './routes/reg/contact-details'
import { Route as RegBasicInfoImport } from './routes/reg/basic-info'
import { Route as RegAttachmentsImport } from './routes/reg/attachments'
import { Route as ManageSubmissionsImport } from './routes/manage/submissions'
import { Route as HelpExamplesImport } from './routes/help/examples'
import { Route as ManageViewUidImport } from './routes/manage/view.$uid'

// Create Virtual Routes

const ManageControlPanelLazyImport = createFileRoute('/manage/control-panel')()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HelpIndexRoute = HelpIndexImport.update({
  path: '/help/',
  getParentRoute: () => rootRoute,
} as any)

const ManageControlPanelLazyRoute = ManageControlPanelLazyImport.update({
  path: '/manage/control-panel',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/manage/control-panel.lazy').then((d) => d.Route),
)

const RegServiceHallRoute = RegServiceHallImport.update({
  path: '/reg/service-hall',
  getParentRoute: () => rootRoute,
} as any)

const RegReadySubmitRoute = RegReadySubmitImport.update({
  path: '/reg/ready-submit',
  getParentRoute: () => rootRoute,
} as any)

const RegNoticeRoute = RegNoticeImport.update({
  path: '/reg/notice',
  getParentRoute: () => rootRoute,
} as any)

const RegContactDetailsRoute = RegContactDetailsImport.update({
  path: '/reg/contact-details',
  getParentRoute: () => rootRoute,
} as any)

const RegBasicInfoRoute = RegBasicInfoImport.update({
  path: '/reg/basic-info',
  getParentRoute: () => rootRoute,
} as any)

const RegAttachmentsRoute = RegAttachmentsImport.update({
  path: '/reg/attachments',
  getParentRoute: () => rootRoute,
} as any)

const ManageSubmissionsRoute = ManageSubmissionsImport.update({
  path: '/manage/submissions',
  getParentRoute: () => rootRoute,
} as any)

const HelpExamplesRoute = HelpExamplesImport.update({
  path: '/help/examples',
  getParentRoute: () => rootRoute,
} as any)

const ManageViewUidRoute = ManageViewUidImport.update({
  path: '/manage/view/$uid',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/help/examples': {
      preLoaderRoute: typeof HelpExamplesImport
      parentRoute: typeof rootRoute
    }
    '/manage/submissions': {
      preLoaderRoute: typeof ManageSubmissionsImport
      parentRoute: typeof rootRoute
    }
    '/reg/attachments': {
      preLoaderRoute: typeof RegAttachmentsImport
      parentRoute: typeof rootRoute
    }
    '/reg/basic-info': {
      preLoaderRoute: typeof RegBasicInfoImport
      parentRoute: typeof rootRoute
    }
    '/reg/contact-details': {
      preLoaderRoute: typeof RegContactDetailsImport
      parentRoute: typeof rootRoute
    }
    '/reg/notice': {
      preLoaderRoute: typeof RegNoticeImport
      parentRoute: typeof rootRoute
    }
    '/reg/ready-submit': {
      preLoaderRoute: typeof RegReadySubmitImport
      parentRoute: typeof rootRoute
    }
    '/reg/service-hall': {
      preLoaderRoute: typeof RegServiceHallImport
      parentRoute: typeof rootRoute
    }
    '/manage/control-panel': {
      preLoaderRoute: typeof ManageControlPanelLazyImport
      parentRoute: typeof rootRoute
    }
    '/help/': {
      preLoaderRoute: typeof HelpIndexImport
      parentRoute: typeof rootRoute
    }
    '/manage/view/$uid': {
      preLoaderRoute: typeof ManageViewUidImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  HelpExamplesRoute,
  ManageSubmissionsRoute,
  RegAttachmentsRoute,
  RegBasicInfoRoute,
  RegContactDetailsRoute,
  RegNoticeRoute,
  RegReadySubmitRoute,
  RegServiceHallRoute,
  ManageControlPanelLazyRoute,
  HelpIndexRoute,
  ManageViewUidRoute,
])

/* prettier-ignore-end */
